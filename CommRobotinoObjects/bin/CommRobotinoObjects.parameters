// --------------------------------------------------------------------------
//
//  Copyright (C) 2018 Servicerobotik Ulm
//
//  Service Robotics Research Center
//  University of Applied Sciences Ulm
//  Prittwitzstr. 10
//  89075 Ulm (Germany)
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------
ParameterSetRepository CommRobotinoObjects {
	ParameterSet RobotinoDockingParameter {
		Parameter BELT_ID { 
			beltId : Int32
		}
		Parameter NUM_BELTS { 
			numBelts : Int32
		}
		Parameter STATION_ID { 
			stationID : Int32
		}
		Trigger SAVE_BEFORE_DOCKING_POSE {}
	}
	
	ParameterSet RobotToRobotDockingParameter {
				
		Trigger SAVE_BEFORE_DOCKING_POSE {}
	}
	
	ParameterSet RobotinoRPCParameter {
		Trigger REFRESH_STATIC_MAP{
		}
		
		Parameter SET_MAPPING_ROBOT_ID{
			robotID : Int32
		}
		
//		Trigger SET_LOCALIZATION_TYP {
//			@doc "NOT USED ANY MORE"
//			localizationType:Enum {
//				LOCALIZATION
//				SLAM
//			}
//			robotID : Int32
//		}	
	}
	
	ParameterSet MultiRobotResourceCoordinationParams {
		Trigger LOADRESOURCELIST {
			filename : String
		}
	}
	
	
	ParameterSet MultiRobotPathNavigationParams {
		Trigger LOADPATHLIST {
			filename : String
		}
	}
	
	ParameterSet PathNavigationParams {	
		Trigger SET_GOAL{
			startPose : UInt32
			goalPose : UInt32
		}
		
		Trigger SET_GOAL_FROM_NODE {
			startNode : UInt32
			goalPose : UInt32
		}
		
		Trigger ACQ_INIT_POSE {
			pose : UInt32
		}
		
		Trigger ACQ_INIT_NODE {
			node : UInt32
		}
		
		Trigger REL_POSE {
			pose : UInt32
		}
		
		Trigger REL_ALL_NODES {
		}
		
		Trigger REL_ALL_NODES_BUT {
			pose : UInt32
		}
		
		Parameter ID { 
			id : Int32
		}
		
		Parameter SetRobotID {
			robotID : String
		}
		Parameter ControlValues {
			maxVel: Double
			lookAhead: Double
			steeringPGain: Double
			velPGain: Double
			goalPointRadius: Double		
			wayPointRadius: Double
		}
	}
	ParameterSet RemoteOperatorParams {
		Trigger ACTIVATE_REMOTE_OP{
			
		}
	}
}
