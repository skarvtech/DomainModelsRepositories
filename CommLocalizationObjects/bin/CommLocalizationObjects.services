// --------------------------------------------------------------------------
//
//  Copyright (C) 2018 Servicerobotik Ulm
//
//  Service Robotics Research Center
//  University of Applied Sciences Ulm
//  Prittwitzstr. 10
//  89075 Ulm (Germany)
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------


#import CommBasicObjects.*;

ServiceDefRepository CommLocalizationObjects version 1.0 
{
	ForkingServiceDefinition LocalizationEventService {
		EventPattern < 
			ActivationType 	= CommLocalizationObjects.CommLocalizationEventParameter
			EventType 		= CommLocalizationObjects.CommLocalizationEventResult
			EventStateType 	= CommLocalizationObjects.LocalizationEventState
		>
	}
	
		ForkingServiceDefinition GPSDService {
		PushPattern < DataType = CommLocalizationObjects.CommGpsFix >
	}
	
	ForkingServiceDefinition AmclVisualizationInfo{
		PushPattern<DataType=CommLocalizationObjects.CommAmclVisualizationInfo>
	}
	
	RequestAnswerServiceDefinition CommGpsFixService {
		QueryPattern <
			RequestType = CommBasicObjects.CommVoid
			AnswerType = CommLocalizationObjects.CommGpsFix
		>
	}
	
	CoordinationServiceDefinition LocalizationCoordinationService {
		ParameterPattern < CommLocalizationObjects.LocalizationParameter >
		StatePattern < lifecycle ComponentLifecycle with CommLocalizationObjects.localizationMode> 
		CommunicationServiceUsage localizationEvent uses LocalizationEventService
	}
	
	CoordinationServiceDefinition SLAMCoordinationService {
		ParameterPattern < CommLocalizationObjects.SlamParameter >
		StatePattern < lifecycle ComponentLifecycle with CommLocalizationObjects.localizationMode>
	}
}